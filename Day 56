Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).
Example 1:
Input: x = 123
Output: 321

Solution:
class Solution {
    public int reverse(int x) {
       long sum=0;
       int temp=x;
       if(x<0)
       x=x*-1;
       while(x>0){
        int digit=x%10;
        sum=(sum*10)+digit;
        x=x/10;
       }
    if(temp<0)
    sum=sum*-1;
    if(sum>Integer.MAX_VALUE || sum<Integer.MIN_VALUE)
    sum=0;
    return (int)sum;
    }
}
